import random  # Подключение библиотеки random

# Объявление переменных
results = []  # Пустой список для хранения результатов

# Списки для генератора
proverbs = [
    "Ум хорошо, а два лучше.",
    "Ум — горячая штука.",
    "Ум всё голова.",
    "Умом Россию не понять.",
    "Ум бережет, а глупость губит.",
    "Ум в голову приходит.",
    "Ум от ума не горит.",
    "Умом нагружен, а волосы развеваются.",
    "Умом обдумал, а ногами пошел.",
    "Ум — сокровище, не пропадет без него и копье на ветру.",
    "Ум — грех, а бес — мера.",
    "Ум есть богатство.",
    "Ум роднит народы.",
    "Ум краток, да забот — бездна.",
    "Ум не камень, взял и положил.",
    "Ум не велит, а наставляет.",
    "Ум с мерой, а глупость без меры.",
    "Ум — сокол, глаз его — телескоп.",
    "Ум — не конская морда, не разобьешь.",
    "Ум — семь пядей во лбу.",
    "Ум — не барсук, в нору не залезет.",
    "Ум в голове, а не на ветру.",
    "Ум греет душу, а глупость терпение.",
    "Ум служит человеку, а глупость — хозяином.",
    "Ум мил, да безумству хозяин.",
    "Ум в труде, да наслаждение в праздности.",
    "Ум глаза исправляет.",
    "Ум человека не обманешь.",
    "Ум на подобии огня — без сна не останешься.",
    "Ум к уму приходит.",
    "Ум с пользой тратит время.",
    "Ум желание творит.",
    "Ум общего дела дело.",
    "Ум — друг, а воля — враг.",
    "Ум — бесценное сокровище.",
    "Ум тонок, да разум невелик.",
    "Ум — враг бедности.",
    "Ум — теремок, да не на прокол.",
    "Ум силен, да не камень.",
    "Ум рассудит, что сердце не посоветует.",
    "Ум — подкова, а топор — ось.",
    "Ум легче камня, да весомей золота.",
    "Ум не вешать на гроздья.",
    "Ум — не мешок, на плечи не вешай.",
    "Ум — лучшая победа.",
    "Ум — в суде велик, а в деле своем мал.",
    "Ум голове краса.",
    "Ум — сокровище, а глупость — нищета.",
    "Ум человека — огонь, а глаза — масло.",
    "Ум — путь, а дорога — конец.",
    "Ум стоит денег.",
    "Ум от смеха бьет в ладоши.",
    "Ум — коза, к барскому плечу привыкает.",
    "Ум — лезвие, а лень — ржавчина.",
    "Ум на вершине — мир в руках.",
]

variants = [
    "кот",
    "шеф",
    "мозг",
    "лес",
    "фолк",
    "код",
    "рот",
    "мёд",
    "лук",
    "год",
    "час",
    "друг",
    "муж",
    "айфон",
    "стол",
    "нос",
    "сыр",
    "хлеб",
    "мир",
    "свет",
    "рок",
    "дед",
    "дом",
    "сон",
    "глаз",
]

# Максимальное количество пословиц для генерации
limit = 10


# Функция для генерации случайной модифицированной пословицы
def generate_proverb():
    if len(proverbs) == 0 or len(variants) == 0:
        return None  # Если список пуст, возвращаем None

    proverb = random.choice(proverbs)  # Выбор случайной пословицы
    noun = random.choice(variants)  # Выбор случайного существительного

    # Удаляем выбранные элементы из списков
    proverbs.remove(proverb)
    variants.remove(noun)

    # Заменяем "Ум" на выбранное существительное
    modified_proverb = proverb.replace("Ум", noun)

    # Возвращаем изменённую пословицу
    return modified_proverb


# Запрос у пользователя, сколько пословиц он хочет получить
try:
    количество = int(input("Сколько пословиц вы хотите получить? "))
    создано = 0  # Счетчик созданных пословиц

    # Генерация нужного количества пословиц или до достижения лимита
    while создано < количество and создано < limit:
        result = generate_proverb()
        if result:  # Проверяем, был ли сгенерирован результат
            results.append(result)  # Добавление результата в список
            создано += 1  # Увеличиваем счетчик созданных пословиц
        else:
            print("Недостаточно пословиц или вариантов для генерации.")
            break  # Прерываем, если не осталось больше пословиц или вариантов

    # Вывод результатов в виде списка
    print("\nСгенерированные пословицы:")
    for idx, res in enumerate(results, start=1):
        print(f"{idx}. {res}")

except ValueError:
    print("Пожалуйста, введите корректное число.")
